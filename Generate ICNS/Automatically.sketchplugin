// Sketch Plugin: Generate ICNS Automatically (shift command a)
// Developer: Nathan Rutzky
// Version: 1.0.3

var artboard = [[[doc currentPage] artboards] firstObject];
var file_url = [doc fileURL];

if (!file_url) {

	[doc showMessage:"Save the Document Before Proceeding..."];
	sound_basso();
}

else if (!artboard) {

	[doc showMessage:"Create an Artboard Before Proceeding..."];
	sound_basso();
}

else {

	var file_path = [[doc fileURL] path];
	var file_folder = file_path.split([doc displayName])[0];
	var file_name = file_folder + ".icon.iconset/" + ".icon_XYZ" + ".png";

	[doc saveArtboardOrSlice:artboard toFile:file_name];
	
	convert_icon(); generate_icon(); remove_iconset(); sound_pop();
		
	[doc showMessage:"Icon Complete..."];
}

function convert_icon() {

	// Is there a cleaner method for writing this?

	var convert_0 = [[NSTask alloc] init],
		convert_1 = [[NSTask alloc] init],
		convert_2 = [[NSTask alloc] init],
		convert_3 = [[NSTask alloc] init],
		convert_4 = [[NSTask alloc] init],
		convert_5 = [[NSTask alloc] init],
		convert_6 = [[NSTask alloc] init],
		convert_7 = [[NSTask alloc] init],
		convert_8 = [[NSTask alloc] init],
		convert_9 = [[NSTask alloc] init];
	
	var a = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 16 16 {} -o icon_16x16.png \\;",
		b = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 32 32 {} -o icon_16x16@2x.png \\;",
		c = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 32 32 {} -o icon_32x32.png \\;",
		d = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 64 64 {} -o icon_32x32@2x.png \\;",
		e = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 128 128 {} -o icon_128x128.png \\;",
		f = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 256 256 {} -o icon_128x128@2x.png \\;",
		g = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 256 256 {} -o icon_256x256.png \\;",
		h = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 512 512 {} -o icon_256x256@2x.png \\;",
		i = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 512 512 {} -o icon_512x512.png \\;",
		j = "find ~/ -name '.icon_XYZ.png' -execdir sips -z 1024 1024 {} -o icon_512x512@2x.png \\;";
	
		[convert_0 setLaunchPath: "/bin/bash"];
		[convert_1 setLaunchPath: "/bin/bash"];
		[convert_2 setLaunchPath: "/bin/bash"];
		[convert_3 setLaunchPath: "/bin/bash"];
		[convert_4 setLaunchPath: "/bin/bash"];
		[convert_5 setLaunchPath: "/bin/bash"];
		[convert_6 setLaunchPath: "/bin/bash"];
		[convert_7 setLaunchPath: "/bin/bash"];
		[convert_8 setLaunchPath: "/bin/bash"];
		[convert_9 setLaunchPath: "/bin/bash"];
	
		[convert_0 setArguments: ["-c", a]];
		[convert_1 setArguments: ["-c", b]];
		[convert_2 setArguments: ["-c", c]];
		[convert_3 setArguments: ["-c", d]];
		[convert_4 setArguments: ["-c", e]];
		[convert_5 setArguments: ["-c", f]];
		[convert_6 setArguments: ["-c", g]];
		[convert_7 setArguments: ["-c", h]];
		[convert_8 setArguments: ["-c", i]];
		[convert_9 setArguments: ["-c", j]];
	
		[convert_0 launch];
		[convert_1 launch];
		[convert_2 launch];
		[convert_3 launch];
		[convert_4 launch];
		[convert_5 launch];
		[convert_6 launch];
		[convert_7 launch];
		[convert_8 launch];
		[convert_9 launch];
		[convert_9 waitUntilExit];
}

function generate_icon() {

	var generate_icon = [[NSTask alloc] init];
	var generate_path = "find ~/ -name '.icon.iconset' -execdir iconutil -c icns {} -o Icon.icns \\;";
	
	[generate_icon setLaunchPath: "/bin/bash"];
	[generate_icon setArguments: ["-c", generate_path]];
	[generate_icon launch];
	[generate_icon waitUntilExit];
}

function remove_iconset() {

	var remove_iconset = [[NSTask alloc] init];
	var remove_path = "find ~/ -name '.icon.iconset' -exec rm -r {} \\;";
	
	[remove_iconset setLaunchPath: "/bin/bash"];
	[remove_iconset setArguments: ["-c", remove_path]];
	[remove_iconset launch];
}

function sound_pop() {

	var sound_pop = [[NSTask alloc] init];
	
	[sound_pop setLaunchPath: "/bin/bash"];
	[sound_pop setArguments: ["-c", "afplay /System/Library/Sounds/Pop.aiff"]];
	[sound_pop launch];
}

function sound_basso() {

	var sound_basso = [[NSTask alloc] init];
	
	[sound_basso setLaunchPath: "/bin/bash"];
	[sound_basso setArguments: ["-c", "afplay /System/Library/Sounds/Basso.aiff"]];
	[sound_basso launch];	
}